{"ast":null,"code":"import _slicedToArray from \"/home/andy/Desktop/campus_buddy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/andy/Desktop/campus_buddy/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport About from \"./About\";\nimport FrontPage from \"./FrontPage\";\nimport Home from \"./Home\";\nimport LoginHooks from \"./components/LoginHooks\";\nimport LogoutHooks from \"./components/LogoutHooks\";\nimport \"./App.css\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSignedIn = _useState2[0],\n      setSignedIn = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1]; //  const [users, setUsers] = useState([])\n  //useEffect(() => {\n  //// GET request using fetch inside useEffect React hook\n  //fetch('/users')\n  //.then(response => response.json())\n  //.then(data => {\n  //console.log(data)\n  //setUsers(data)\n  //});\n  //// empty dependency array means this effect will only run once (like componentDidMount in classes)\n  //}, []);\n\n\n  var responseGoogle = function responseGoogle(response) {\n    console.log(response);\n    setData(response.profileObj);\n  };\n\n  var responseGoogle2 = function responseGoogle2(response) {\n    console.log(response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"615520021367-sjvmtmuujlf91gicag6u1kr4b4mu76bq.apps.googleusercontent.com\",\n        buttonText: \"Login\",\n        onSuccess: responseGoogle,\n        onFailure: responseGoogle,\n        isSignedIn: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogout, {\n        clientId: \"615520021367-sjvmtmuujlf91gicag6u1kr4b4mu76bq.apps.googleusercontent.com\",\n        buttonText: \"Logout\",\n        onSuccess: responseGoogle2,\n        onFailure: responseGoogle2,\n        on: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginHooks, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/logout\",\n            element: /*#__PURE__*/_jsxDEV(LogoutHooks, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BwOwFnp9zRlFUkzIFeYxE7nyisI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/andy/Desktop/campus_buddy/frontend/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Navbar","About","FrontPage","Home","LoginHooks","LogoutHooks","GoogleLogin","GoogleLogout","App","isSignedIn","setSignedIn","data","setData","responseGoogle","response","console","log","profileObj","responseGoogle2"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport About from \"./About\";\nimport FrontPage from \"./FrontPage\";\nimport Home from \"./Home\";\nimport LoginHooks from \"./components/LoginHooks\";\nimport LogoutHooks from \"./components/LogoutHooks\";\nimport \"./App.css\";\nimport { GoogleLogin, GoogleLogout} from \"react-google-login\";\n\nfunction App() {\n  const [isSignedIn, setSignedIn] = useState(false);\n  const [data, setData] = useState({});\n  //  const [users, setUsers] = useState([])\n  //useEffect(() => {\n  //// GET request using fetch inside useEffect React hook\n  //fetch('/users')\n  //.then(response => response.json())\n  //.then(data => {\n  //console.log(data)\n  //setUsers(data)\n  //});\n\n  //// empty dependency array means this effect will only run once (like componentDidMount in classes)\n  //}, []);\n  const responseGoogle = (response) => {\n    console.log(response);\n    setData(response.profileObj);\n  };\n  const responseGoogle2 = (response) => {\n    console.log(response);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {<Navbar />}\n        <GoogleLogin\n          clientId=\"615520021367-sjvmtmuujlf91gicag6u1kr4b4mu76bq.apps.googleusercontent.com\"\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          isSignedIn={true}\n        />\n        <GoogleLogout\n          clientId=\"615520021367-sjvmtmuujlf91gicag6u1kr4b4mu76bq.apps.googleusercontent.com\"\n          buttonText=\"Logout\"\n          onSuccess={responseGoogle2}\n          onFailure={responseGoogle2}\n          on\n        />\n        <div className=\"content\">\n          <Routes>\n            <Route exact path=\"/\" element={<Home data={data}/>} />\n            <Route exact path=\"/about\" element={<About />} />\n            <Route exact path=\"/login\" element={<LoginHooks />} />\n            <Route exact path=\"/logout\" element={<LogoutHooks />} />\n          </Routes>\n          <br />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}